<Page x:Class="StockManager.Views.GeneratorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
      xmlns:lc="clr-namespace:StockManager.Controls"
      xmlns:commands="clr-namespace:StockManager.Commands"
      xmlns:vr="clr-namespace:StockManager.ValidationRules"
      mc:Ignorable="d"
      d:DesignHeight="455" d:DesignWidth="845"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      FontFamily="{DynamicResource MaterialDesignFont}">
    <Page.Resources>
        <vr:BindingProxy x:Key="proxy" Data="{Binding}"/>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0"
                  Style="{DynamicResource MaterialDesignGroupBox}"
                  materialDesign:ShadowAssist.ShadowDepth="Depth3"
                  BorderThickness="0"
                  Margin="5">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Buffer" Height="32" Width="32" VerticalAlignment="Center"/>
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Queues"/>
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Name" Margin="0,5" Foreground="{StaticResource SecondaryAccentBrush}"/>
                <TextBox Grid.Row="1" Margin="0,0,0,10" Text="{Binding NewQueueName}"/>
                <Button Style="{StaticResource MaterialDesignFlatButton}"
                        Grid.Row="2"
                        Command="{Binding NewQueueCommand}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Plus" Height="32" Width="32" VerticalAlignment="Center" Foreground="{StaticResource SecondaryAccentBrush}"/>
                        <TextBlock Text="Queue" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource SecondaryAccentBrush}"/>
                    </StackPanel>
                </Button>
                <Border Margin="0,5" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}"
                        Grid.Row="3"/>
                <TextBlock Text="Queues" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5" Grid.Row="4"/>
                <ListBox x:Name="Queue"
                         Margin="0,0,0,10"
                         ItemsSource="{Binding QueuesList}"
                         SelectedItem="{Binding CurrentQueue}"
                         IsSynchronizedWithCurrentItem="True"
                         Grid.Row="5">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Item.Name}"/>
                                <materialDesign:PackIcon Kind="Flash"
                                                         Grid.Column="1"
                                                         Foreground="{StaticResource ErrorBrush}"
                                                         VerticalAlignment="Center"
                                                         Cursor="Hand"
                                                         ToolTip="In progress"
                                                         Visibility="{c:Binding Path='IsSelected'}"/>
                                <materialDesign:PackIcon Kind="CloseCircleOutline"
                                                         Foreground="{StaticResource ErrorBrush}"
                                                         VerticalAlignment="Center"
                                                         ToolTip="Remove"
                                                         Cursor="Hand"
                                                         Grid.Column="2"
                                                         IsEnabled="{c:Binding Path='!IsSelected'}">
                                    <materialDesign:PackIcon.Style>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Setter Property="commands:CommandBehavior.Command" Value="{Binding DataContext.RemoveQueueCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"/>
                                            <Setter Property="commands:CommandBehavior.CommandParameter" Value="{Binding }"/>
                                            <Setter Property="commands:CommandBehavior.RoutedEventName" Value="PreviewMouseLeftButtonDown"/>
                                        </Style>
                                    </materialDesign:PackIcon.Style>
                                </materialDesign:PackIcon>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="1"
                  Style="{DynamicResource MaterialDesignGroupBox}"
                  materialDesign:ShadowAssist.ShadowDepth="Depth3"
                  BorderThickness="0"
                  Margin="5">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Briefcase" Height="32" Width="32" VerticalAlignment="Center"/>
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Tasks"/>
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <Grid IsEnabled="{c:Binding Path='!IsWorking or CurrentQueue!=ProcessingQueue'}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Tasks" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5" Grid.Row="0"/>
                <ListBox Margin="0,0,0,10"
                         ItemsSource="{Binding CurrentQueue.Item.Tasks}"
                         IsSynchronizedWithCurrentItem="True"
                         Grid.Row="1">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding Name}"/>
                                <materialDesign:PackIcon Kind="CloseCircleOutline"
                                                             Foreground="{StaticResource ErrorBrush}"
                                                             HorizontalAlignment="Right"
                                                             VerticalAlignment="Center"
                                                             ToolTip="Remove"
                                                             Cursor="Hand">
                                    <materialDesign:PackIcon.Style>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Setter Property="commands:CommandBehavior.Command" Value="{Binding DataContext.RemoveTaskCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"/>
                                            <Setter Property="commands:CommandBehavior.CommandParameter" Value="{Binding }"/>
                                            <Setter Property="commands:CommandBehavior.RoutedEventName" Value="PreviewMouseLeftButtonDown"/>
                                        </Style>
                                    </materialDesign:PackIcon.Style>
                                </materialDesign:PackIcon>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Border Margin="0,5" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}"
                        Grid.Row="2"/>
                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="3">
                    <StackPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Theme" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                        <ComboBox x:Name="Theme" Margin="0,0,0,10" ItemsSource="{Binding Themes}" DisplayMemberPath="Name" SelectedItem="{Binding Theme}"/>
                        <TextBlock Text="Template" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                        <ComboBox x:Name="Template" Margin="0,0,0,10" ItemsSource="{Binding Templates}" DisplayMemberPath="Name" SelectedItem="{Binding Template}"/>
                        <TextBlock Text="Background" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                        <ComboBox x:Name="Background" Margin="0,0,0,10" ItemsSource="{Binding Backgrounds}" DisplayMemberPath="Name" SelectedItem="{Binding Background}"/>
                        <TextBlock Text="Percentage" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                        <TextBox x:Name="Percentage" Margin="0,0,0,10" Text="{Binding Percentage}"/>
                        <TextBlock Text="Maximum" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                        <TextBox x:Name="Maximum" Margin="0,0,0,10" Text="{Binding Maximum}"/>
                    </StackPanel>
                </ScrollViewer>
                <Border Margin="0,5" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" Grid.Row="4"/>
                <Button Grid.Row="5"
                        Command="{Binding NewTaskCommand}"
                        Margin="0,5"
                        Height="Auto">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{c:Binding Path='Theme==null'}" Value="False"/>
                                        <Condition Binding="{c:Binding Path='Template==null'}" Value="False"/>
                                        <Condition Binding="{c:Binding Path='Background==null'}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Percentage, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Maximum, Path=(Validation.HasError)}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Plus" Height="32" Width="32" VerticalAlignment="Center" Foreground="{StaticResource SecondaryAccentBrush}"/>
                        <TextBlock Text="Task" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource SecondaryAccentBrush}"/>
                    </StackPanel>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="2"
                  Style="{DynamicResource MaterialDesignGroupBox}"
                  materialDesign:ShadowAssist.ShadowDepth="Depth3"
                  BorderThickness="0"
                  Margin="5">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Information" Height="32" Width="32" VerticalAlignment="Center"/>
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Info"/>
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Matching Icons" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" Text="{Binding MatchingIcons}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Combinations" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Margin="0,0,0,10" Text="{Binding Combinations}"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Used Combinations" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                <TextBlock Grid.Row="3" Grid.Column="0" Margin="0,0,0,10" Text="{Binding UsedCombinations}"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="Unused Combinations" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Margin="0,0,0,10" Text="{c:Binding 'Combinations - UsedCombinations'}"/>
                <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="Actions Log" Foreground="{StaticResource SecondaryAccentBrush}" Margin="0,5,0,10"/>
                <TextBox Grid.Row="5"
                         Grid.ColumnSpan="2"
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Auto"
                         Margin="0,0,0,10"
                         Text="{Binding Log, Mode=OneWay}"
                         IsReadOnly="True"
                         Style="{StaticResource MaterialDesignTextAreaTextBox}"/>
                <Border Grid.Row="6" Grid.ColumnSpan="2" Margin="0,5" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}"/>
                <Button Grid.Row="7"
                        Grid.ColumnSpan="2"
                        Margin="0,5"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding ProcessCommand}"
                        Height="Auto">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="PlayCircleOutline" Height="32" Width="32" VerticalAlignment="Center" Foreground="{StaticResource SecondaryAccentBrush}">
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsWorking}" Value="True">
                                            <Setter Property="Kind" Value="StopCircleOutline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                        <TextBlock Text="Start" VerticalAlignment="Center" Foreground="{StaticResource SecondaryAccentBrush}">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MaterialDesignSubheadingTextBlock}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsWorking}" Value="True">
                                            <Setter Property="Text" Value="Stop"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Button>
            </Grid>
        </GroupBox>
    </Grid>
</Page>
